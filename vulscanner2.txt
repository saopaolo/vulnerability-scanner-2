import requests
from bs4 import BeautifulSoup
import json

# Function to get CVEs related to a specific product
def get_cves_for_product(product_name):
    url = f"https://services.nvd.nist.gov/rest/json/cve/1.0?keyword={product_name}"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        return data.get("CVE_Items", [])
    else:
        print("Error fetching data from NVD API")
        return []

# Function to crawl the website and extract links
def crawl_website(base_url):
    visited = set()
    to_visit = [base_url]
    links = []

    while to_visit:
        url = to_visit.pop()
        if url not in visited:
            visited.add(url)
            try:
                response = requests.get(url)
                soup = BeautifulSoup(response.content, 'html.parser')

                # Extract links
                for link in soup.find_all('a', href=True):
                    full_link = link['href']
                    if full_link.startswith('/'):
                        full_link = base_url + full_link
                    elif not full_link.startswith('http'):
                        continue
                    links.append(full_link)
                    to_visit.append(full_link)

            except requests.RequestException as e:
                print(f"Failed to retrieve {url}: {e}")

    return links

# Main function to check a website for vulnerabilities
def check_website_vulnerabilities(base_url):
    print(f"Crawling {base_url} for links...")
    links = crawl_website(base_url)

    # Extracting product name from URL for searching CVEs
    product_name = base_url.split("//")[-1].split("/")[0]
    print(f"Searching for CVEs related to {product_name}...")

    cves = get_cves_for_product(product_name)

    if not cves:
        print("No CVEs found for this product.")
        return

    print(f"Found {len(cves)} CVEs related to {product_name}:")
    for cve in cves:
        cve_id = cve['cve']['CVE_data_meta']['ID']
        cve_description = cve['cve']['description']['description_data'][0]['value']
        print(f" - {cve_id}: {cve_description}")

# Example usage
if __name__ == "__main__":
    website_to_check = "https://example.com"
    check_website_vulnerabilities(website_to_check)
